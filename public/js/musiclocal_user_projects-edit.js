"use strict";var ProjectEditContainer=React.createClass({displayName:"ProjectEditContainer",componentDidMount:function componentDidMount(){ReactDOM.unmountComponentAtNode(document.getElementById('content-menu'));$("#projectsbutton").attr({"class":"active"});},handleClick:function handleClick($e){ReactDOM.unmountComponentAtNode(document.getElementById('manageprojectcontent'));if($e.target.id == 'add-about'){ReactDOM.render(React.createElement(AboutContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-user'){ReactDOM.render(React.createElement(UserContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-show'){ReactDOM.render(React.createElement(ShowsProjectContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-banner'){ReactDOM.render(React.createElement(BannerProjectContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-photoalbum'){ReactDOM.render(React.createElement(PhotoalbumProjectContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-video'){ReactDOM.render(React.createElement(VideoProjectContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-audio'){ReactDOM.render(React.createElement(AudioProjectContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-social'){ReactDOM.render(React.createElement(SocialAddContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-contact'){ReactDOM.render(React.createElement(ContactProjectContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}else if($e.target.id == 'add-listing'){ReactDOM.render(React.createElement(BookinglistingProjectContainer,{data:this.props.data}),document.getElementById('manageprojectcontent'));}},handleProjectDelete:function handleProjectDelete(childdata){ /*
            Re-loads project list from server after delete instead of simply adjusting state client-side. This code is inefficient.
        */var projectid=childdata;var r=confirm("Are you sure you want to delete this project? WARNING: this action cannot be undone.");if(r == true){$.ajax({type:"POST",url:"/user/projects/delete", //dataType: "text"
data:{"project_id":projectid,_token:$_token},error:function error(){$('.photohashasnotbeenadded').finish().hide(0).removeClass('alert-success','alert-info').html('There was an error').addClass('alert-danger').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);},success:function success(response){$('.photohashasnotbeenadded').finish().hide(0).removeClass('alert-danger','alert-info').html('Success').addClass('alert-success').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);ReactDOM.unmountComponentAtNode(document.getElementById('content-modal'));ReactDOM.unmountComponentAtNode(document.getElementById('content-menu'));ReactDOM.unmountComponentAtNode(document.getElementById('content-main'));ReactDOM.render(React.createElement(ProjectsMenu,null),document.getElementById('content-menu'));}});}},render:function render(){return React.createElement("div",null,React.createElement(ProjectIsActiveEditHeader,{data:this.props.data,handleProjectDelete:this.handleProjectDelete}),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-about",onClick:this.handleClick},"About")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-user",onClick:this.handleClick},"Users")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-show",onClick:this.handleClick},"Shows")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-banner",onClick:this.handleClick},"Banners")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-photoalbum",onClick:this.handleClick},"Photo Albums")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-video",onClick:this.handleClick},"Video")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-audio",onClick:this.handleClick},"Audio")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-social",onClick:this.handleClick},"Social Media")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-contact",onClick:this.handleClick},"Contact Info")),React.createElement("div",{className:"col-sm-2 col-lg-1"},React.createElement("a",{className:"btn btn-default btn-block",id:"add-listing",onClick:this.handleClick},"Listings")),React.createElement("div",{id:"manageprojectcontent"}));}});var ProjectIsActiveEditHeader=React.createClass({displayName:"ProjectIsActiveEditHeader",getInitialState:function getInitialState(){return {project_active:{isactive:false,activatebutton_text:'',projectviewbutton:''}};},componentDidMount:function componentDidMount(){var projectid=this.props.data.project_id;$.ajax({type:"GET",url:"/user_project_active_status",data:{"project_id":projectid},error:(function(){this.setState({project_active:{isactive:null,activatebutton_text:'',projectviewbutton:'Could not get project status from server.'}});$('.photohashasnotbeenadded').finish().hide(0).removeClass('alert-success','alert-info').html('There was an error. Please reload the page.').addClass('alert-danger').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);}).bind(this),success:(function(response){if(response == 1){this.setState({project_active:{isactive:true,activatebutton_text:'(Active - click to deactivate)',projectviewbutton:'View ' + this.props.data.project_name + ' Project Page'}});}if(response == 0){this.setState({project_active:{isactive:false,activatebutton_text:'(Inactive - click to activate)',projectviewbutton:'Activate ' + this.props.data.project_name + ' to view it.'}});}}).bind(this)});},handleProjectActiveToggle:function handleProjectActiveToggle(){var isactive=this.state.project_active.isactive;var projectid=this.props.data.project_id;if(isactive == false){$.ajax({type:"POST",url:"/user/projects/activate",data:{"project_id":projectid,_token:$_token},error:function error(){$('.flash').finish().hide(0).removeClass('alert-success','alert-info').html('There was an error communicating with the server.<br/>Please try again.').addClass('alert-danger').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);},success:(function(){this.setState({project_active:{isactive:true,activatebutton_text:'(Active - click to deactivate)',projectviewbutton:'View Project Page'}});$('.flash').finish().hide(0).removeClass('alert-danger','alert-info').html('Project has been activated.').addClass('alert-success').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);}).bind(this)});}else if(isactive == true){$.ajax({type:"POST",url:"/user/projects/deactivate",data:{"project_id":projectid,_token:$_token},error:function error(){$('.flash').finish().hide(0).removeClass('alert-success','alert-info').html('There was an error communicating with the server.<br>Please try again.').addClass('alert-danger').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);},success:(function(){this.setState({project_active:{isactive:false,activatebutton_text:'(Inactive - click to activate)',projectviewbutton:'Activate your project to view it.'}});$('.flash').finish().hide(0).removeClass('alert-danger','alert-info').html('Project has been deactivated.').addClass('alert-success').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);}).bind(this)});}},viewProjectPage:function viewProjectPage(){var isactive=this.state.project_active.isactive;if(isactive == false){alert('You must activate your project to preview it.');}else if(isactive == true){var projectlinkstring='/' + this.props.data.project_url + '';window.open(projectlinkstring);}},handleProjectDelete:function handleProjectDelete(){var data=this.props.data.project_id;this.props.handleProjectDelete(data);},render:function render(){var isactive=this.state.project_active.isactive; //var activatebuttonstyle = {};
if(isactive == false){var activatebuttonstyle={paddingLeft:10,marginRight:10}; //, color:'yellow'
var projectviewbutton={paddingLeft:10}; //color:'#333333'
var projectviewbuttonclass='btn btn-default btn-block';var projectactivatebuttonclass='btn btn-warning btn-block';}else {var activatebuttonstyle={paddingLeft:10,marginRight:10}; //, color:'green'
var projectviewbutton={paddingLeft:10};var projectviewbuttonclass='btn btn-info btn-block';var projectactivatebuttonclass='btn btn-success btn-block';}return React.createElement("div",null,React.createElement("div",{className:"col-xs-4"},React.createElement("a",{className:projectactivatebuttonclass,style:activatebuttonstyle,onClick:this.handleProjectActiveToggle},this.state.project_active.activatebutton_text)),React.createElement("div",{className:"col-xs-4"},React.createElement("a",{className:projectviewbuttonclass,style:projectviewbutton,onClick:this.viewProjectPage},this.state.project_active.projectviewbutton)),React.createElement("div",{className:"col-xs-4"},React.createElement("a",{className:"btn btn-danger btn-block",onClick:this.handleProjectDelete,onTouchStart:this.handleProjectDelete},"Delete Project")));}});var ProjectsectionToggle=React.createClass({displayName:"ProjectsectionToggle",getInitialState:function getInitialState(){return {projectsection_toggle_data:{isactive:this.props.projectsection_toggle_data.isactive,activatebutton_text:this.props.projectsection_toggle_data.activatebutton_text}};},componentDidMount:function componentDidMount(){ //by default, get active state from parent to conserve get requests.
//if isactive data is unavailable, get from server using ajax.
if(this.state.projectsection_toggle_data.isactive == null){var projectid=this.props.project_id;var projectsection_id=this.props.projectsection_toggle_data.projectsection_id;$.ajax({type:"GET",url:"/user/project/projectsection/active_status",data:{"project_id":projectid,"projectsection_id":projectsection_id,_token:$_token},error:(function(){this.setState({projectsection_toggle_data:{isactive:null,activatebutton_text:'Could not retrieve status.'}});$('.flash').finish().hide(0).removeClass('alert-success','alert-info').html('There was an error. Please reload the page.').addClass('alert-danger').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);}).bind(this),success:(function(response){if(response == 1){this.setState({projectsection_toggle_data:{isactive:true,activatebutton_text:'(Active - click to deactivate)'}});}if(response == 0){this.setState({projectsection_toggle_data:{isactive:false,activatebutton_text:'(Inactive - click to activate)'}});}}).bind(this)});}},handleToggle:function handleToggle(){var isactive=this.state.projectsection_toggle_data.isactive;var projectid=this.props.project_id;var projectsection_id=this.props.projectsection_toggle_data.projectsection_id;if(isactive == false){$.ajax({type:"POST",url:"/user/project/projectsection/activate",data:{"project_id":projectid,"projectsection_id":projectsection_id,_token:$_token},error:function error(){$('.flash').finish().hide(0).removeClass('alert-success','alert-info').html('There was an error communicating with the server.<br/>Please try again.').addClass('alert-danger').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);},success:(function(){this.setState({projectsection_toggle_data:{isactive:true,activatebutton_text:'(Active - click to deactivate)'}});$('.flash').finish().hide(0).removeClass('alert-danger','alert-info').html('Project has been activated.').addClass('alert-success').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);}).bind(this)});}else if(isactive == true){$.ajax({type:"POST",url:"/user/project/projectsection/deactivate",data:{"project_id":projectid,"projectsection_id":projectsection_id,_token:$_token},error:function error(){$('.flash').finish().hide(0).removeClass('alert-success','alert-info').html('There was an error communicating with the server.<br>Please try again.').addClass('alert-danger').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);},success:(function(){this.setState({projectsection_toggle_data:{isactive:false,activatebutton_text:'(Inactive - click to activate)'}});$('.flash').finish().hide(0).removeClass('alert-danger','alert-info').html('Project has been deactivated.').addClass('alert-success').fadeIn(300).removeClass('hidden').delay(3000).fadeOut(300);}).bind(this)});}},render:function render(){var isactive=this.state.projectsection_toggle_data.isactive;if(isactive == null){var activatebuttonstyle={paddingLeft:10,marginRight:10}; //, color:'yellow'
//var projectviewbutton = {paddingLeft:10};//color:'#333333'
//var projectviewbuttonclass = 'btn btn-default';
var projectactivatebuttonclass='btn btn-default';}if(isactive == false){var activatebuttonstyle={paddingLeft:10,marginRight:10}; //, color:'yellow'
//var projectviewbutton = {paddingLeft:10};//color:'#333333'
//var projectviewbuttonclass = 'btn btn-default';
var projectactivatebuttonclass='btn btn-warning';}else {var activatebuttonstyle={paddingLeft:10,marginRight:10}; //, color:'green'
//var projectviewbutton = {paddingLeft:10};
//var projectviewbuttonclass = 'btn btn-info';
var projectactivatebuttonclass='btn btn-success';}return React.createElement("div",null,React.createElement("a",{className:projectactivatebuttonclass,style:activatebuttonstyle,onClick:this.handleToggle},this.state.projectsection_toggle_data.activatebutton_text));}});